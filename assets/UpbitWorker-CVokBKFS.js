(function(){"use strict";async function y(){try{const e=await fetch("https://api.upbit.com/v1/market/all?isDetails=true"),o=await e.json();if(e.status!==200)throw new Error("Failed to fetch symbols list");return o.filter(s=>s.market.startsWith("KRW-"))}catch(e){return console.error("Error fetching symbols list:",e),[]}}async function u(e){const o=await y();if(o.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${o.length} symbols...`),o.forEach(r=>{e[r.market]={price:0,color:"#FFFFFF",openPrice:0}})}function h(e,o){e.forEach(r=>{const{symbol:s,price:n,openPrice:i}=d(r);if(o[s]){let l="#FFFFFF";o[s].openPrice<n?l="#f75467":o[s].openPrice>n&&(l="#4386f9"),o[s].price=n,o[s].color=l,i&&(o[s].openPrice=i)}})}function d(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}const a=[],c={};let t=null,f=!1,p=0;const b=e=>{t=new WebSocket("wss://api.upbit.com/websocket/v1/ticker"),t.binaryType="arraybuffer",t.onopen=()=>{console.log("Connected"),u(c).then(()=>{const o=[{ticket:"UNIQUE_TICKET12312432q153453245234543"},{type:"ticker",codes:Object.keys(c),is_only_snapshot:e}];t==null||t.send(JSON.stringify(o))})},t.onmessage=o=>{const s=new TextDecoder("utf-8").decode(o.data),n=JSON.parse(s);try{h([n],c)}catch{a.forEach(l=>{l.postMessage("upbit 데이터 정리 오류")})}a.forEach(i=>{i.postMessage({type:"UpbitsymbolData",data:{...c[n.code],symbol:n.code}})}),f===!1&&(p++,p===Object.keys(c).length&&(f=!0,t==null||t.close(),b(!1)))},t.onclose=()=>{a.forEach(o=>{o.postMessage("연결 끊김")})}};b(!0)})();
