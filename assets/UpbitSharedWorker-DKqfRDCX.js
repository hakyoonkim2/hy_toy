(function(){"use strict";const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function h(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}let u;const m=new Uint8Array(16);function f(){if(!u){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");u=crypto.getRandomValues.bind(crypto)}return u(m)}var d={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function U(e,t,c){var r;if(d.randomUUID&&!e)return d.randomUUID();e=e||{};const n=e.random??((r=e.rng)==null?void 0:r.call(e))??f();if(n.length<16)throw new Error("Random bytes length must be >= 16");return n[6]=n[6]&15|64,n[8]=n[8]&63|128,h(n)}async function w(){try{const e=await fetch("https://api.upbit.com/v1/market/all?isDetails=true"),t=await e.json();if(e.status!==200)throw new Error("Failed to fetch symbols list");return t.filter(n=>n.market.startsWith("KRW-"))}catch(e){throw e}}async function F(e){const t=await w();if(t.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${t.length} symbols...`),t.forEach(c=>{e[c.market]={price:0,color:"#FFFFFF",openPrice:0}})}function k(e,t){e.forEach(c=>{const{symbol:n,price:r,openPrice:l}=E(c);if(t[n]){let p="#FFFFFF";t[n].openPrice<r?p="#f75467":t[n].openPrice>r&&(p="#4386f9"),t[n].price=r,t[n].color=p,l&&(t[n].openPrice=l)}})}function E(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}const D=self,a=[],i={};let s=null,y=!1,b=0;const g=e=>{s=new WebSocket("wss://api.upbit.com/websocket/v1/ticker"),s.binaryType="arraybuffer",s.onopen=()=>{console.log("Connected"),F(i).then(()=>{a.forEach(c=>{c.postMessage({type:"upbit 종목 데이터 받아오기",data:i})});const t=[{ticket:U()},{type:"ticker",codes:Object.keys(i),is_only_snapshot:e}];s==null||s.send(JSON.stringify(t))}).catch(t=>{a.forEach(c=>{c.postMessage({type:"error upbit 종목 데이터 받아오기",data:t})})})},s.onmessage=t=>{const n=new TextDecoder("utf-8").decode(t.data),r=JSON.parse(n);a.forEach(l=>{l.postMessage({type:"upbit 데이터 정리 시작",data:r})});try{k([r],i)}catch{a.forEach(p=>{p.postMessage("upbit 데이터 정리 오류")})}a.forEach(l=>{l.postMessage({type:"UpbitsymbolData",data:{...i[r.code],symbol:r.code}})}),y===!1&&(b++,b===Object.keys(i).length&&(y=!0,s==null||s.close(),g(!1)))},s.onclose=()=>{a.forEach(t=>{t.postMessage("연결 끊김")})}};D.onconnect=e=>{const t=e.ports[0];a.push(t),t.onmessage=c=>{console.log("Received from client:",c.data)},Object.keys(i).length>0&&t.postMessage({type:"symbolData",data:i}),a.forEach(c=>{c.postMessage("유저가 추가됨")}),t.start()},g(!0)})();
