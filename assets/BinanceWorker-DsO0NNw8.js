const B="wss://stream.binance.com:9443/ws/",P="wss://stream.binance.us:9443/ws/";let i="";function T(e,t,o){e.forEach(n=>{const{symbol:r,price:s,openPrice:c}=w(n);if(t[r]){const h=I(t[r].openPrice,s);t[r].price=s,t[r].color=h,c&&(t[r].openPrice=c),o[r]||(o[r]=t[r])}})}function w(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}function I(e,t){let o="#FFFFFF";return e<t?o="#f75467":e>t&&(o="#4386f9"),o}async function p(){if(i.length===0)try{const e=await fetch("https://proxy-server-flax-rho.vercel.app/api/proxy?locale=find"),{country:t}=await e.json();return i=t,t==="US"}catch(e){return console.error("Failed to detect country from IP:",e),!1}else return i==="US"}const y="https://api.binance.com/api/v3",A="https://api.binance.us/api/v3";async function b(){try{const e=await p(),o=await(await fetch(`${e?A:y}/exchangeInfo`)).json();if(!o.symbols)throw new Error("Failed to fetch symbols list");return o.symbols.filter(r=>r.symbol.endsWith("USDT")&&r.status==="TRADING").map(r=>r.symbol)}catch(e){return console.error("Error fetching symbols list:",e),[]}}async function U(e){const o=`${await p()?A:y}/klines?symbol=${e}&interval=1d&limit=2`;try{const r=await(await fetch(o)).json();if(!Array.isArray(r)||r.length<2)throw new Error(`No sufficient data for ${e}`);const s=r.length>=2?r[1][1]:r[0][1],c=r.length>=2?r[1][4]:r[0][4];return{symbol:e,openPrice:s,curPrice:c}}catch(n){return console.error(`Error fetching data for ${e}:`,n),{symbol:e,openPrice:null,curPrice:null}}}async function E(e){const t=await b();if(t.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${t.length} symbols...`),(await Promise.all(t.map(U))).forEach(n=>{let r="#FFFFFF";const s=parseFloat(n.curPrice),c=parseFloat(n.openPrice);c<s?r="#f75467":c>s&&(r="#4386f9"),e[n.symbol]={price:s,color:r,openPrice:c}})}var _=(e=>(e.UPBIT_SYMBOL_LIST="UPBIT_SYMBOL_LIST",e.UPBIT_SYMBOL_TRADE_DATA="UPBIT_SYMBOL_TRADE_DATA",e.UPBIT_SYMBOLS_RESTAPI_TRADE_DATA="UPBIT_SYMBOLS_RESTAPI_TRADE_DATA",e.BINANCE_SYMBOLS_DATA="BINANCE_SYMBOLS_DATA",e))(_||{});const S={};let a=null,l=null,f={};E(S);const u=e=>{a=new WebSocket(e),a.onmessage=t=>{const o=JSON.parse(t.data),n=Array.from(o).filter(r=>r.s.includes("USDT"));try{T(n,S,f)}catch(r){self.postMessage(`데이터 정리 오류: ${r}`)}l||(l=setTimeout(()=>{self.postMessage({type:_.BINANCE_SYMBOLS_DATA,data:f}),f={},l=null},300))},a.onclose=()=>{self.postMessage("연결 끊김")}};self.onmessage=()=>{};const d=async()=>{const e=await p();u(e?`${P}!ticker@arr`:`${B}!ticker@arr`)};d();
