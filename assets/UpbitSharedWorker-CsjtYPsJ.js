(function(){"use strict";const c=[];for(let e=0;e<256;++e)c.push((e+256).toString(16).slice(1));function f(e,t=0){return(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase()}let p;const b=new Uint8Array(16);function g(){if(!p){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");p=crypto.getRandomValues.bind(crypto)}return p(b)}var u={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function m(e,t,o){var r;if(u.randomUUID&&!e)return u.randomUUID();e=e||{};const n=e.random??((r=e.rng)==null?void 0:r.call(e))??g();if(n.length<16)throw new Error("Random bytes length must be >= 16");return n[6]=n[6]&15|64,n[8]=n[8]&63|128,f(n)}async function U(){const e=encodeURIComponent("https://api.upbit.com/v1/market/all?isDetails=true"),t=await fetch(`https://proxy-server-flax-rho.vercel.app/api/proxy?url=${e}`),o=await t.json();if(t.status!==200)throw new Error("Failed to fetch symbols list");return o.filter(r=>r.market.startsWith("KRW-"))}async function y(e){const t=await U();if(t.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${t.length} symbols...`),t.forEach(o=>{e[o.market]={price:0,color:"#FFFFFF",openPrice:0}})}function k(e,t){e.forEach(o=>{const{symbol:n,price:r,openPrice:l}=w(o);if(t[n]){const D=d(t[n].openPrice,r);t[n].price=r,t[n].color=D,l&&(t[n].openPrice=l)}})}function w(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}function d(e,t){let o="#FFFFFF";return e<t?o="#f75467":e>t&&(o="#4386f9"),o}async function F(){try{const e=await fetch("https://ipapi.co/json/"),{country_code:t}=await e.json();return t!=="US"}catch(e){return console.error("Failed to detect country from IP:",e),!1}}function v(e,t){const o=[];for(let n=0;n<e.length;n+=t)o.push(e.slice(n,n+t));return o}async function E(e){const t=e.join(","),o=encodeURIComponent(`https://api.upbit.com/v1/ticker?markets=${t}`);return(await fetch(`https://proxy-server-flax-rho.vercel.app/api/proxy?url=${o}`)).json()}async function x(e){const t=v(e,100);return(await Promise.all(t.map(E))).flat()}const I=self,a=[],s={};let i=null;const R=()=>{i=new WebSocket("wss://api.upbit.com/websocket/v1/ticker"),i.binaryType="arraybuffer",i.onopen=()=>{console.log("Connected"),y(s).then(()=>{const e=[{ticket:m()},{type:"ticker",codes:Object.keys(s)}];i==null||i.send(JSON.stringify(e))}).catch(e=>{a.forEach(t=>{t.postMessage({type:"error upbit 종목 데이터 받아오기",data:e})})})},i.onmessage=e=>{const o=new TextDecoder("utf-8").decode(e.data),n=JSON.parse(o);a.forEach(r=>{r.postMessage({type:"upbit 데이터 정리 시작",data:n})});try{k([n],s)}catch(r){a.forEach(l=>{l.postMessage(`upbit 데이터 정리 오류: ${r}`)})}a.forEach(r=>{r.postMessage({type:"UpbitsymbolData",data:{...s[n.code],symbol:n.code}})})},i.onclose=()=>{a.forEach(e=>{e.postMessage("연결 끊김")})}};I.onconnect=e=>{const t=e.ports[0];a.push(t),t.onmessage=o=>{console.log("Received from client:",o.data)},Object.keys(s).length>0&&t.postMessage({type:"UpbitsymbolData",data:s}),a.forEach(o=>{o.postMessage("유저가 추가됨")}),t.start()};const h=e=>{x(e).then(t=>{t.forEach(o=>{const n=s[o.market];n.openPrice=o.opening_price,n.price=o.trade_price,n.color=d(o.opening_price,o.trade_price)})}),a.forEach(t=>{t.postMessage({type:"UpbitRestsymbolData",data:s})})},S=(e,t=1e3)=>{h(e),setInterval(()=>{h(e)},t)};(async()=>{if(await F())R();else{await y(s);const t=Object.keys(s);S(t)}})()})();
