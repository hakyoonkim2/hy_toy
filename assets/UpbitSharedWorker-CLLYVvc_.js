const s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));function k(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}let p;const U=new Uint8Array(16);function w(){if(!p){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");p=crypto.getRandomValues.bind(crypto)}return p(U)}const v=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var d={randomUUID:v};function x(e,t,o){var c;if(d.randomUUID&&!e)return d.randomUUID();e=e||{};const n=e.random??((c=e.rng)==null?void 0:c.call(e))??w();if(n.length<16)throw new Error("Random bytes length must be >= 16");return n[6]=n[6]&15|64,n[8]=n[8]&63|128,k(n)}async function b(){const e=encodeURIComponent("https://api.upbit.com/v1/market/all?isDetails=true"),t=await fetch(`https://proxy-server-flax-rho.vercel.app/api/proxy?url=${e}`),o=await t.json();if(t.status!==200)throw new Error("Failed to fetch symbols list");return o.filter(c=>c.market.startsWith("KRW-"))}async function f(e,t){if(t.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${t.length} symbols...`),t.forEach(o=>{e[o.market]={price:0,color:"#FFFFFF",openPrice:0}})}let u="";function F(e,t){e.forEach(o=>{const{symbol:n,price:c,openPrice:l}=S(o);if(t[n]){const m=g(t[n].openPrice,c);t[n].price=c,t[n].color=m,l&&(t[n].openPrice=l)}})}function S(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}function g(e,t){let o="#FFFFFF";return e<t?o="#f75467":e>t&&(o="#4386f9"),o}async function E(){if(u.length===0)try{const e=await fetch("https://proxy-server-flax-rho.vercel.app/api/proxy?locale=find"),{country:t}=await e.json();return u=t,t==="US"}catch(e){return console.error("Failed to detect country from IP:",e),!1}else return u==="US"}function _(e,t){const o=[];for(let n=0;n<e.length;n+=t)o.push(e.slice(n,n+t));return o}async function R(e){const t=e.join(","),o=encodeURIComponent(`https://api.upbit.com/v1/ticker?markets=${t}`);return(await fetch(`https://proxy-server-flax-rho.vercel.app/api/proxy?url=${o}`)).json()}async function I(e){const t=_(e,100);return(await Promise.all(t.map(R))).flat()}const P=self,i=[],r={};let y=[],a=null;const D=()=>{a=new WebSocket("wss://api.upbit.com/websocket/v1/ticker"),a.binaryType="arraybuffer",a.onopen=()=>{console.log("Connected"),(async()=>{const t=await b();y=t,i.forEach(o=>{o.postMessage({type:"upbit_symbol_list",data:t})}),f(r,t).then(()=>{const o=[{ticket:x()},{type:"ticker",codes:Object.keys(r)}];a==null||a.send(JSON.stringify(o))})})()},a.onmessage=e=>{const o=new TextDecoder("utf-8").decode(e.data),n=JSON.parse(o);try{F([n],r)}catch(c){i.forEach(l=>{l.postMessage(`upbit 데이터 정리 오류: ${c}`)})}i.forEach(c=>{c.postMessage({type:"UpbitsymbolData",data:{...r[n.code],symbol:n.code}})})},a.onclose=()=>{i.forEach(e=>{e.postMessage("연결 끊김")})}};P.onconnect=e=>{const t=e.ports[0];i.push(t),t.onmessage=o=>{console.log("Received from client:",o.data)},y.length>0&&t.postMessage({type:"upbit_symbol_list",data:y}),Object.keys(r).length>0&&t.postMessage({type:"UpbitsymbolData",data:r}),i.forEach(o=>{o.postMessage("유저가 추가됨")}),t.start()};const h=e=>{I(e).then(t=>{t.forEach(o=>{const n=r[o.market];n.openPrice=o.opening_price,n.price=o.trade_price,n.color=g(o.opening_price,o.trade_price)})}),i.forEach(t=>{t.postMessage({type:"UpbitRestsymbolData",data:r})})},j=(e,t=1e3)=>{h(e),setInterval(()=>{h(e)},t)},C=async()=>{if(await E())D();else{const t=await b();i.forEach(n=>{n.postMessage({type:"upbit_symbol_list",data:t})}),await f(r,t);const o=Object.keys(r);j(o)}};C();
