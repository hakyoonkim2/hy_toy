let i="";function _(e,o){e.forEach(t=>{const{symbol:n,price:r,openPrice:s}=S(t);if(o[n]){const c=h(o[n].openPrice,r);o[n].price=r,o[n].color=c,s&&(o[n].openPrice=s)}})}function S(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}function h(e,o){let t="#FFFFFF";return e<o?t="#f75467":e>o&&(t="#4386f9"),t}async function f(){if(i.length===0)try{const e=await fetch("https://proxy-server-flax-rho.vercel.app/api/proxy?locale=find"),{country:o}=await e.json();return i=o,o==="US"}catch(e){return console.error("Failed to detect country from IP:",e),!1}else return i==="US"}const u="https://api.binance.com/api/v3",y="https://api.binance.us/api/v3";async function B(){try{const e=await f(),t=await(await fetch(`${e?y:u}/exchangeInfo`)).json();if(!t.symbols)throw new Error("Failed to fetch symbols list");return t.symbols.filter(r=>r.symbol.endsWith("USDT")&&r.status==="TRADING").map(r=>r.symbol)}catch(e){return console.error("Error fetching symbols list:",e),[]}}async function P(e){const t=`${await f()?y:u}/klines?symbol=${e}&interval=1d&limit=2`;try{const r=await(await fetch(t)).json();if(!Array.isArray(r)||r.length<2)throw new Error(`No sufficient data for ${e}`);const s=r.length>=2?r[1][1]:r[0][1],c=r.length>=2?r[1][4]:r[0][4];return{symbol:e,openPrice:s,curPrice:c}}catch(n){return console.error(`Error fetching data for ${e}:`,n),{symbol:e,openPrice:null,curPrice:null}}}async function T(e){const o=await B();if(o.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${o.length} symbols...`),(await Promise.all(o.map(P))).forEach(n=>{let r="#FFFFFF";const s=parseFloat(n.curPrice),c=parseFloat(n.openPrice);c<s?r="#f75467":c>s&&(r="#4386f9"),e[n.symbol]={price:s,color:r,openPrice:c}})}const w="wss://stream.binance.com:9443/ws/",I="wss://stream.binance.us:9443/ws/";var A=(e=>(e.UPBIT_SYMBOL_LIST="UPBIT_SYMBOL_LIST",e.UPBIT_SYMBOL_TRADE_DATA="UPBIT_SYMBOL_TRADE_DATA",e.UPBIT_SYMBOLS_RESTAPI_TRADE_DATA="UPBIT_SYMBOLS_RESTAPI_TRADE_DATA",e.BINANCE_SYMBOLS_DATA="BINANCE_SYMBOLS_DATA",e))(A||{});const l={};let a=null;T(l);const p=e=>{a=new WebSocket(e),a.onmessage=o=>{const t=JSON.parse(o.data),n=Array.from(t).filter(r=>r.s.includes("USDT"));try{_(n,l)}catch(r){self.postMessage(`데이터 정리 오류: ${r}`)}self.postMessage({type:A.BINANCE_SYMBOLS_DATA,data:l})},a.onclose=()=>{self.postMessage("연결 끊김")}};self.onmessage=()=>{};const b=async()=>{const e=await f();p(e?`${I}!ticker@arr`:`${w}!ticker@arr`)};b();
