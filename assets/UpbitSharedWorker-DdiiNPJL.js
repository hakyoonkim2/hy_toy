(function(){"use strict";const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function h(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}let d;const m=new Uint8Array(16);function f(){if(!d){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");d=crypto.getRandomValues.bind(crypto)}return d(m)}var y={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function U(e,t,s){var r;if(y.randomUUID&&!e)return y.randomUUID();e=e||{};const n=e.random??((r=e.rng)==null?void 0:r.call(e))??f();if(n.length<16)throw new Error("Random bytes length must be >= 16");return n[6]=n[6]&15|64,n[8]=n[8]&63|128,h(n)}async function w(){try{const e=await fetch("https://api.upbit.com/v1/market/all?isDetails=true"),t=await e.json();if(e.status!==200)throw new Error("Failed to fetch symbols list");return t.filter(n=>n.market.startsWith("KRW-"))}catch(e){return console.error("Error fetching symbols list:",e),[]}}async function F(e){const t=await w();if(t.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${t.length} symbols...`),t.forEach(s=>{e[s.market]={price:0,color:"#FFFFFF",openPrice:0}})}function k(e,t){e.forEach(s=>{const{symbol:n,price:r,openPrice:l}=D(s);if(t[n]){let u="#FFFFFF";t[n].openPrice<r?u="#f75467":t[n].openPrice>r&&(u="#4386f9"),t[n].price=r,t[n].color=u,l&&(t[n].openPrice=l)}})}function D(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}const E=self,i=[],a={};let c=null,p=!1,b=0;const g=e=>{c=new WebSocket("wss://api.upbit.com/websocket/v1/ticker"),c.binaryType="arraybuffer",c.onopen=()=>{console.log("Connected"),F(a).then(()=>{const t=[{ticket:U()},{type:"ticker",codes:Object.keys(a),is_only_snapshot:e}];c==null||c.send(JSON.stringify(t))})},c.onmessage=t=>{const n=new TextDecoder("utf-8").decode(t.data),r=JSON.parse(n);try{k([r],a)}catch{i.forEach(u=>{u.postMessage("upbit 데이터 정리 오류")})}i.forEach(l=>{l.postMessage({type:"UpbitsymbolData",data:{...a[r.code],symbol:r.code}})}),p===!1&&(b++,b===Object.keys(a).length&&(p=!0,c==null||c.close(),g(!1)))},c.onclose=()=>{i.forEach(t=>{t.postMessage("연결 끊김")})}};E.onconnect=e=>{const t=e.ports[0];i.push(t),t.onmessage=s=>{console.log("Received from client:",s.data)},Object.keys(a).length>0&&t.postMessage({type:"symbolData",data:a}),i.forEach(s=>{s.postMessage("유저가 추가됨")}),t.start()},g(!0)})();
