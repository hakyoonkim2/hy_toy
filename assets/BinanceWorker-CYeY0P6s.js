function y(e,s){e.forEach(n=>{const{symbol:r,price:o,openPrice:t}=h(n);if(s[r]){const c=w(s[r].openPrice,o);s[r].price=o,s[r].color=c,t&&(s[r].openPrice=t)}})}function h(e){if("s"in e&&"c"in e)return{symbol:e.s,price:parseFloat(e.c)};if("code"in e&&"trade_price"in e)return{symbol:e.code,price:e.trade_price,openPrice:e.opening_price};throw new Error("Unknown data type")}function w(e,s){let n="#FFFFFF";return e<s?n="#f75467":e>s&&(n="#4386f9"),n}async function l(){try{const e=await fetch("https://ipapi.co/json/"),{country_code:s}=await e.json();return s!=="US"}catch(e){return console.error("Failed to detect country from IP:",e),!1}}const b="wss://stream.binance.com:9443/ws/!ticker@arr",p="https://api.binance.com/api/v3",u="https://api.binance.us/api/v3";async function d(){try{const e=await l(),n=await(await fetch(`${e?p:u}/exchangeInfo`)).json();if(!n.symbols)throw new Error("Failed to fetch symbols list");return n.symbols.filter(o=>o.symbol.endsWith("USDT")&&o.status==="TRADING").map(o=>o.symbol)}catch(e){return console.error("Error fetching symbols list:",e),[]}}async function g(e){const n=`${await l()?p:u}/klines?symbol=${e}&interval=1d&limit=2`;try{const o=await(await fetch(n)).json();if(!Array.isArray(o)||o.length<2)throw new Error(`No sufficient data for ${e}`);const t=o.length>=2?o[1][1]:o[0][1],c=o.length>=2?o[1][4]:o[0][4];return{symbol:e,openPrice:t,curPrice:c}}catch(r){return console.error(`Error fetching data for ${e}:`,r),{symbol:e,openPrice:null,curPrice:null}}}async function m(e){const s=await d();if(s.length===0){console.error("No symbols available.");return}console.log(`Fetching open prices for ${s.length} symbols...`),(await Promise.all(s.map(g))).forEach(r=>{let o="#FFFFFF";const t=parseFloat(r.curPrice),c=parseFloat(r.openPrice);c<t?o="#f75467":c>t&&(o="#4386f9"),e[r.symbol]={price:t,color:o,openPrice:c}})}const i={};let a=null;m(i);const f=e=>{a=new WebSocket(e??b),a.onmessage=s=>{const n=JSON.parse(s.data),r=Array.from(n).filter(o=>o.s.includes("USDT"));try{y(r,i)}catch(o){self.postMessage(`데이터 정리 오류: ${o}`)}self.postMessage({type:"symbolData",data:i})},a.onclose=()=>{self.postMessage("연결 끊김")}};self.onmessage=()=>{};const F=async()=>{await l()?f():f("wss://stream.binance.us:9443/ws/!ticker@arr")};F();
